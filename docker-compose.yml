version: '3.8'
services:
  commandsApp:
    image: facturedtest/commandapp
    build:
      context: .
      dockerfile: ./dockerfiles/commandapp.dockerfile      
    command: bash "/apps/commandApp/entrypoint.sh"
    ports:
      - 8000:8000
    volumes:
      - ./commandApp:/apps/commandApp
    environment:
      - TZ=America/El_Salvador
      - DB_NAME=facturedtest
      - DB_USER=facturedtest
      - DB_PORT=5432
      - RABBITMQ_QUEUE=db_sync_queue
      - RABBITMQ_HOST = rabbitmqfr
    depends_on:
      postgresqldbfr:
        condition: service_healthy
      rabbitmqfr:
        condition: service_healthy
    restart: unless-stopped
    

  postgresqldbfr:
    image: postgres:16.6-alpine3.21
    environment:
      POSTGRES_PASSWORD: facturedtest
      POSTGRES_USER: facturedtest
      POSTGRES_DB: facturedtest
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  

  querysApp:
    image: facturedtest/queryapp
    build:
      context: .
      dockerfile: ./dockerfiles/queryapp.dockerfile      
    command: bash "/apps/queryApp/entrypoint.sh"
    ports:
      - 8001:8000
    volumes:
      - ./queryApp:/apps/queryApp
    environment:
      - TZ=America/El_Salvador
    depends_on:
      - mongodb
    restart: unless-stopped


  mongodb:
    image: mongodb/mongodb-community-server
    ports:
      - 27017:27017


  syncDBApp:
    image: facturedtest/syncdbapp
    command: bash "/apps/syncDBApp/entrypoint.sh"
    build:
      context: .
      dockerfile: ./dockerfiles/syncdbapp.dockerfile 
    volumes:
      - ./syncDBApp:/apps/syncDBApp
    environment:
      - TZ=America/El_Salvador
      - RABBITMQ_QUEUE=db_sync_queue
      - RABBITMQ_HOST = rabbitmqfr
    depends_on:
      rabbitmqfr:
        condition: service_healthy
    restart: unless-stopped


  rabbitmqfr:
    image: rabbitmq:4-management-alpine
    expose:
      - 5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped

#  apitGatewayAPP:
